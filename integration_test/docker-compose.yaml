version: '3.7'

volumes: 
  grafana_data: {}

networks:
  front-tier:
  back-tier:

services:
  backend:
    environment:
      - PREDICTIONS_STREAM_NAME=${PREDICTIONS_STREAM_NAME}
      - RUN_ID=${RUN_ID}
      - AWS_DEFAULT_REGION=us-east-1
      - MODEL_LOCATION=/app/model
      - KINESIS_ENDPOINT_URL=http://kinesis:4566/
      - DATABASE_HOST=db  # Added this line
      - AWS_ACCESS_KEY_ID=abc
      - AWS_SECRET_ACCESS_KEY=xyz
      - MLFLOW_TRACKING_SERVER_HOST=${MLFLOW_TRACKING_SERVER_HOST}
    image: ${LOCAL_IMAGE_NAME}
    ports:
      - "8080:8080"
    volumes:
      - ./model:/app/model
      - ./scripts:/app/scripts
    networks:
      - back-tier
      - front-tier
    depends_on:
      - db  # Ensure backend starts after db
      - kinesis

  kinesis:
    environment:
      - SERVICES=kinesis
    image: localstack/localstack
    ports:
      - "4566:4566"
    networks:
      - back-tier

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_DB: test  # Added this line to create the 'test' database on startup
    ports:
      - "5432:5432"
    networks:
      - back-tier

  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - back-tier
      - front-tier  

  grafana:
    image: grafana/grafana
    user: "472"
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana_datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
      - ./config/grafana_dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
      - ./dashboards:/opt/grafana/dashboards
    networks:
      - back-tier
      - front-tier
    restart: always
    environment:
    - GF_LOG_LEVEL=error


# services:
#   backend:
#     environment:
#     - PREDICTIONS_STREAM_NAME=${PREDICTIONS_STREAM_NAME}
#     - RUN_ID=${RUN_ID}
#     - AWS_DEFAULT_REGION=us-east-1
#     - MODEL_LOCATION=/app/model
#     - KINESIS_ENDPOINT_URL=http://kinesis:4566/
#     - AWS_ACCESS_KEY_ID=abc
#     - AWS_SECRET_ACCESS_KEY=xyz
#     - MLFLOW_TRACKING_SERVER_HOST=${MLFLOW_TRACKING_SERVER_HOST}
#     image: ${LOCAL_IMAGE_NAME}
#     ports:
#     - 8080:8080
#     volumes:
#     - ./model:/app/model
#     - ./scripts:/app/scripts
#   kinesis:
#     environment:
#     - SERVICES=kinesis
#     image: localstack/localstack
#     ports:
#     - 4566:4566
